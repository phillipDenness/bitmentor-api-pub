group 'bitmentor'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        kotlin_version = '1.3.70'
        micrometer_version = '1.3.6'
        ktor_version = '1.3.1'
        log4j_version = '2.11.1'
        konfig_version = '1.6.10.0'
        jackson_version = '2.10.2'
        hateoas_version = '1.0.3.RELEASE'
        coroutines_version = '1.3.4'

        mockk_version = '1.10.0'
        jdbi_version = '3.14.0'
        flyway_plugin_version = '6.4.4'
        postgresql_version = '42.2.14'
        hikaricp_version = '3.4.5'
        prometeus_version = '1.6.4'
    }
    repositories {
        mavenCentral()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


repositories {
    mavenCentral()
    jcenter()
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'de.undercouch.download'
mainClassName = 'bitmentor.api.ApplicationKt'


dependencies {
    // Email
    implementation 'com.sendgrid:sendgrid-java:4.6.4'
    compile group: 'com.auth0', name: 'java-jwt', version: '3.10.3'

    // Auth
    compile group: 'com.google.api-client', name: 'google-api-client', version: '1.30.10'
    compile group: 'com.google.api-client', name: 'google-api-client-jackson2', version: '1.30.10'
    compile group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.8.6'


    // Storage
    compile group: 'org.apache.tika', name: 'tika-core', version: '1.24.1'
    compile group: 'com.google.auth', name: 'google-auth-library-oauth2-http', version: '0.22.0'

    compile group: 'com.google.cloud', name: 'google-cloud-storage', version: '1.113.1'

    //db
    implementation "org.postgresql:postgresql:$postgresql_version"
    runtime group: 'org.postgresql', name: 'postgresql', version: postgresql_version
    implementation "org.jdbi:jdbi3-postgres:$jdbi_version"
    implementation "org.jdbi:jdbi3-kotlin:$jdbi_version"
    implementation "org.jdbi:jdbi3-kotlin-sqlobject:$jdbi_version"
    implementation "org.jdbi:jdbi3-jackson2:$jdbi_version"
    implementation "com.zaxxer:HikariCP:$hikaricp_version"
    implementation "org.flywaydb:flyway-core:$flyway_plugin_version"


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "com.natpryce:konfig:$konfig_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.springframework.hateoas:spring-hateoas:$hateoas_version"

    //ktor
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-jetty:$ktor_version"
    implementation "io.ktor:ktor-client:$ktor_version"
    implementation "io.ktor:ktor-client-json:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "io.ktor:ktor-client-jackson:$ktor_version"
    implementation "io.ktor:ktor-client-core-native:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    compile group: 'io.ktor', name: 'ktor-client-auth-jvm', version: "$ktor_version"
    implementation "io.ktor:ktor-metrics-micrometer:$ktor_version"

    //de/serialization
    compile "com.fasterxml.jackson.module:jackson-module-parameter-names:$jackson_version"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "$jackson_version"

    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jackson_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jackson_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: "$jackson_version"
    implementation("io.ktor:ktor-server-cio:$ktor_version")
    implementation("net.devrieze:xmlutil-serialization-jvm:0.20.0.1")
    implementation("io.ktor:ktor-client-cio:$ktor_version")
    implementation("io.ktor:ktor-client-json-jvm:$ktor_version")

    //payment
    compile group: 'com.paypal.sdk', name: 'checkout-sdk', version: '1.0.2'
    compile 'com.paypal.sdk:rest-api-sdk:+'

    //logging
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"
    implementation "org.apache.logging.log4j:log4j-api:$log4j_version"
    implementation "org.apache.logging.log4j:log4j-core:$log4j_version"
    implementation 'io.github.microutils:kotlin-logging:1.4.3'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j:$coroutines_version"

    // tests
    testImplementation "junit:junit:4.13"
    testImplementation "io.ktor:ktor-server-test-host:$ktor_version"
    testImplementation "io.mockk:mockk:$mockk_version"
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    archiveBaseName = 'bitmentor_api'
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
}

configurations {
    testCompile {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    }
}
compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}
compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

run {
    jvmArgs "-Dlog4j.configurationFile=src/main/resources/log4j2-dev.yml", "-Duser.timezone=UTC"
}

test {
    testLogging.showStandardStreams = true
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean
